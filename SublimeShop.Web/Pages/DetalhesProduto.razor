@page "/DetalhesProduto/{ProdutoId:int}"

@if(Produto is null && ErroMensagem is null)
{
    <ExibirSpinner/>
}
else if(ErroMensagem is not null)
{
    <ExibirErro ErroMensagem="@ErroMensagem"></ExibirErro>
}
else
{
    <h3 class="mb-5">Detalhes do Produto</h3>
    <div class="row">
        <div class="col-md-6 mb-4">
            <img class="img-fluid" src="@Produto.ImagemUrl"/>
        </div>
        <div class="col-md-6">
            <h3>@Produto.NomeProduto</h3>
            <p class="mb-4">@Produto.DescricaoProduto</p>
            <p class="mb-4">
                <b>
                    @Produto.PrecoProduto.ToString("C")&nbsp; 
                </b>

                @if(Produto.QuantidadeProduto < 10)
                {
                    <div>
                         Corra, apenas @Produto.QuantidadeProduto peças em estoque
                    </div>
                }
            </p>
            <div>
                <button class="btn btn-sucess" 
                @onclick="() => AdicionarNoCarrinho_Click(new CarrinhoProdutoAdicionaDto{
                    CarrinhoId = UsuarioLogado.CarrinhoId,
                    ProdutoId = Produto.ProdutoId,
                    Quantidade = 1
                })">
                    Incluir no Carrinho
                </button>
            </div>

        </div>
    </div>
}
@code{
    [Inject]
    public IProdutoService? ProdutoService { get; set;}

    [Inject]
    public ICarrinhoService? CarrinhoService{ get; set; }

    [Parameter]
    public int ProdutoId { get; set; }
    public ProdutoDTO? Produto { get; set; }
    public string? ErroMensagem { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Produto = await ProdutoService.GetById(ProdutoId);
        }
        catch (Exception ex)
        {
            ErroMensagem = ex.Message;
        }
    }

    protected async Task AdicionarNoCarrinho_Click(CarrinhoProdutoAdicionaDto carrinhoProdutoAdicionaDto)
    {
        try
        {
            var carrinhoProdutoDto = await CarrinhoService.AdicionaItens(carrinhoProdutoAdicionaDto);
        }
        catch (Exception)
        {
            
            throw;
        }
    }

}
